
       IDENTIFICATION DIVISION.
       PROGRAM-ID. BST-DEMO.

       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 TREE-MEMORY.
          05 NODE-TABLE OCCURS 50 TIMES INDEXED BY NODE-IDX.
             10 NODE-VALUE PIC 9(3).
             10 LEFT-CHILD-POINTER PIC 9(2) VALUE 0.
             10 RIGHT-CHILD-POINTER PIC 9(2) VALUE 0.
             10 NODE-ACTIVE PIC 9(1) VALUE 0. *> 0: free, 1: used

       01 ROOT-POINTER PIC 9(2) VALUE 0.
       01 FREE-POINTER PIC 9(2) VALUE 1.
       01 CURRENT-POINTER PIC 9(2).
       01 PARENT-POINTER PIC 9(2).

       01 NEW-KEY PIC 9(3).
       01 SEARCH-KEY PIC 9(3).
       01 FOUND-POINTER PIC 9(2).

       01 TRAVERSAL-STACK.
           05 STACK-ITEMS OCCURS 50 TIMES PIC 9(2).
           05 STACK-TOP PIC 9(2) VALUE 0.

       PROCEDURE DIVISION.

       DISPLAY "--- INSERTANDO ELEMENTOS EN EL BST ---".
       MOVE 50 TO NEW-KEY. PERFORM INSERT-NODE. DISPLAY "Insertado: " NEW-KEY.
       MOVE 30 TO NEW-KEY. PERFORM INSERT-NODE. DISPLAY "Insertado: " NEW-KEY.
       MOVE 20 TO NEW-KEY. PERFORM INSERT-NODE. DISPLAY "Insertado: " NEW-KEY.
       MOVE 40 TO NEW-KEY. PERFORM INSERT-NODE. DISPLAY "Insertado: " NEW-KEY.
       MOVE 70 TO NEW-KEY. PERFORM INSERT-NODE. DISPLAY "Insertado: " NEW-KEY.
       MOVE 60 TO NEW-KEY. PERFORM INSERT-NODE. DISPLAY "Insertado: " NEW-KEY.
       MOVE 80 TO NEW-KEY. PERFORM INSERT-NODE. DISPLAY "Insertado: " NEW-KEY.

       DISPLAY " ".
       DISPLAY "--- BUSQUEDAS EN EL BST ---".
       MOVE 40 TO SEARCH-KEY.
       PERFORM SEARCH-NODE.
       IF FOUND-POINTER NOT = 0
           DISPLAY "Clave " SEARCH-KEY " encontrada."
       ELSE
           DISPLAY "Clave " SEARCH-KEY " no encontrada."
       END-IF.

       MOVE 90 TO SEARCH-KEY.
       PERFORM SEARCH-NODE.
       IF FOUND-POINTER NOT = 0
           DISPLAY "Clave " SEARCH-KEY " encontrada."
       ELSE
           DISPLAY "Clave " SEARCH-KEY " no encontrada."
       END-IF.

       DISPLAY " ".
       DISPLAY "--- RECORRIDO IN-ORDER --- ".
       PERFORM INORDER-TRAVERSAL.

       STOP RUN.

       INSERT-NODE.
           IF FREE-POINTER > 50
               DISPLAY "Error: Memoria de nodos llena."
               STOP RUN
           END-IF.
           MOVE NEW-KEY TO NODE-VALUE(FREE-POINTER).
           MOVE 1 TO NODE-ACTIVE(FREE-POINTER).
           IF ROOT-POINTER = 0
               MOVE FREE-POINTER TO ROOT-POINTER
           ELSE
               MOVE ROOT-POINTER TO CURRENT-POINTER
               PERFORM UNTIL CURRENT-POINTER = 0
                   MOVE CURRENT-POINTER TO PARENT-POINTER
                   IF NEW-KEY < NODE-VALUE(CURRENT-POINTER)
                       MOVE LEFT-CHILD-POINTER(CURRENT-POINTER) TO CURRENT-POINTER
                   ELSE
                       MOVE RIGHT-CHILD-POINTER(CURRENT-POINTER) TO CURRENT-POINTER
                   END-IF
               END-PERFORM
               IF NEW-KEY < NODE-VALUE(PARENT-POINTER)
                   MOVE FREE-POINTER TO LEFT-CHILD-POINTER(PARENT-POINTER)
               ELSE
                   MOVE FREE-POINTER TO RIGHT-CHILD-POINTER(PARENT-POINTER)
               END-IF
           END-IF.
           ADD 1 TO FREE-POINTER.

       SEARCH-NODE.
           MOVE ROOT-POINTER TO CURRENT-POINTER.
           MOVE 0 TO FOUND-POINTER.
           PERFORM UNTIL CURRENT-POINTER = 0 OR FOUND-POINTER NOT = 0
               IF SEARCH-KEY = NODE-VALUE(CURRENT-POINTER)
                   MOVE CURRENT-POINTER TO FOUND-POINTER
               ELSE
                   IF SEARCH-KEY < NODE-VALUE(CURRENT-POINTER)
                       MOVE LEFT-CHILD-POINTER(CURRENT-POINTER) TO CURRENT-POINTER
                   ELSE
                       MOVE RIGHT-CHILD-POINTER(CURRENT-POINTER) TO CURRENT-POINTER
                   END-IF
               END-IF
           END-PERFORM.

       INORDER-TRAVERSAL.
           MOVE 0 TO STACK-TOP.
           MOVE ROOT-POINTER TO CURRENT-POINTER.
           PERFORM UNTIL CURRENT-POINTER = 0 AND STACK-TOP = 0
               IF CURRENT-POINTER NOT = 0
                   ADD 1 TO STACK-TOP
                   MOVE CURRENT-POINTER TO STACK-ITEMS(STACK-TOP)
                   MOVE LEFT-CHILD-POINTER(CURRENT-POINTER) TO CURRENT-POINTER
               ELSE
                   MOVE STACK-ITEMS(STACK-TOP) TO CURRENT-POINTER
                   SUBTRACT 1 FROM STACK-TOP
                   DISPLAY NODE-VALUE(CURRENT-POINTER)
                   MOVE RIGHT-CHILD-POINTER(CURRENT-POINTER) TO CURRENT-POINTER
               END-IF
           END-PERFORM.
